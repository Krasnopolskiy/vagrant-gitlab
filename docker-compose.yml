services:
  gateway:
    image: traefik:v2.10
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.postgres.address=:5432"
      - "--entrypoints.redis.address=:6379"
      - "--entrypoints.consul.address=:8500"
      - "--entrypoints.sentinel.address=:26379"
    ports:
      - "8080:8080"  # Dashboard
      - "5432:5432"  # PostgreSQL
      - "6380:6379"  # Redis
      - "8500:8500"  # Consul
      - "26379:26379" # Sentinel
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  consul1:
    image: consul:1.15
    command: agent -server -bootstrap-expect=3 -ui -node=server-1 -client=0.0.0.0
    volumes:
      - consul1-data:/consul/data
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.consul.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.consul.entrypoints=consul"
      - "traefik.tcp.services.consul.loadbalancer.server.port=8500"

  consul2:
    image: consul:1.15
    command: agent -server -bootstrap-expect=3 -ui -node=server-2 -retry-join=consul1 -client=0.0.0.0
    volumes:
      - consul2-data:/consul/data
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.consul.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.consul.entrypoints=consul"
      - "traefik.tcp.services.consul.loadbalancer.server.port=8500"

  consul3:
    image: consul:1.15
    command: agent -server -bootstrap-expect=3 -ui -node=server-3 -retry-join=consul1 -client=0.0.0.0
    volumes:
      - consul3-data:/consul/data
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.consul.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.consul.entrypoints=consul"
      - "traefik.tcp.services.consul.loadbalancer.server.port=8500"

  patroni1:
    image: patroni
    command: /usr/local/bin/entrypoint.sh /etc/patroni.yml
    volumes:
      - patroni1-data:/data/patroni
      - ./docker/patroni/patroni.yml:/etc/patroni.yml
      - ./docker/patroni/entrypoint.sh:/usr/local/bin/entrypoint.sh
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgres.entrypoints=postgres"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
    depends_on:
      - consul1

  patroni2:
    image: patroni
    volumes:
      - patroni2-data:/data/patroni
      - ./docker/patroni/patroni.yml:/etc/patroni.yml
      - ./docker/patroni/entrypoint.sh:/usr/local/bin/entrypoint.sh
    command: /usr/local/bin/entrypoint.sh /etc/patroni.yml
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgres.entrypoints=postgres"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
    depends_on:
      - consul1

  sentinel1:
    image: redis-consul
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    entrypoint: /usr/local/bin/entrypoint.sh
    environment:
      - CONSUL_SERVICE_NAME=sentinel
      - CONSUL_SERVICE_PORT=26379
      - CONSUL_HOST=gateway:8500
    volumes:
      - ./docker/redis/sentinel.conf:/usr/local/etc/redis/sentinel.conf
      - ./docker/redis/entrypoint.sh:/usr/local/bin/entrypoint.sh
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.sentinel.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.sentinel.entrypoints=sentinel"
      - "traefik.tcp.services.sentinel.loadbalancer.server.port=26379"

  sentinel2:
    image: redis-consul
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    entrypoint: /usr/local/bin/entrypoint.sh
    environment:
      - CONSUL_SERVICE_NAME=sentinel
      - CONSUL_SERVICE_PORT=26379
      - CONSUL_HOST=gateway:8500
    volumes:
      - ./docker/redis/sentinel.conf:/usr/local/etc/redis/sentinel.conf
      - ./docker/redis/entrypoint.sh:/usr/local/bin/entrypoint.sh
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.sentinel.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.sentinel.entrypoints=sentinel"
      - "traefik.tcp.services.sentinel.loadbalancer.server.port=26379"

  sentinel3:
    image: redis-consul
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    entrypoint: /usr/local/bin/entrypoint.sh
    environment:
      - CONSUL_SERVICE_NAME=sentinel
      - CONSUL_SERVICE_PORT=26379
      - CONSUL_HOST=gateway:8500
    volumes:
      - ./docker/redis/sentinel.conf:/usr/local/etc/redis/sentinel.conf
      - ./docker/redis/entrypoint.sh:/usr/local/bin/entrypoint.sh
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.sentinel.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.sentinel.entrypoints=sentinel"
      - "traefik.tcp.services.sentinel.loadbalancer.server.port=26379"

  redis1:
    image: redis-consul
    command: redis-server --requirepass mypassword --masterauth mypassword
    entrypoint: /usr/local/bin/entrypoint.sh
    environment:
      - CONSUL_SERVICE_NAME=redis
      - CONSUL_SERVICE_PORT=6379
      - CONSUL_HOST=gateway:8500
    volumes:
      - redis1-data:/data
      - ./docker/redis/entrypoint.sh:/usr/local/bin/entrypoint.sh
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.redis.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.redis.entrypoints=redis"
      - "traefik.tcp.services.redis.loadbalancer.server.port=6379"

  redis2:
    image: redis-consul
    command: redis-server --slaveof redis1 6379 --requirepass mypassword --masterauth mypassword
    entrypoint: /usr/local/bin/entrypoint.sh
    environment:
      - CONSUL_SERVICE_NAME=redis
      - CONSUL_SERVICE_PORT=6379
      - CONSUL_HOST=gateway:8500
    volumes:
      - redis2-data:/data
      - ./docker/redis/entrypoint.sh:/usr/local/bin/entrypoint.sh
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.redis.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.redis.entrypoints=redis"
      - "traefik.tcp.services.redis.loadbalancer.server.port=6379"

volumes:
  consul1-data:
  consul2-data:
  consul3-data:
  patroni1-data:
  patroni2-data:
  redis1-data:
  redis2-data:
  gitlab-logs:
  gitlab-data:
