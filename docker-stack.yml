version: '3.8'

services:
  gateway:
    image: traefik:v2.10
    command:
      - "--configFile=/traefik.yml"
    ports:
      - "8080:8080"  # Dashboard
      - "5432:5432"  # PostgreSQL
      - "6380:6379"  # Redis
      - "8500:8500"  # Consul
      - "26379:26379" # Sentinel
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik/traefik.yml:/traefik.yml
    networks:
      - internal
    depends_on:
      - consul
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  consul:
    image: consul:1.15
    command: agent -server -bootstrap-expect=3 -ui -client=0.0.0.0 -retry-join=tasks.consul
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    networks:
      - internal
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.role == manager
        max_replicas_per_node: 3
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.consul.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.consul.entrypoints=consul"
      - "traefik.tcp.services.consul.loadbalancer.server.port=8500"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  patroni:
    image: ghcr.io/krasnopolskiy/patroni:latest
    command: /usr/local/bin/entrypoint.sh /etc/patroni.yml
    volumes:
      - ./docker/patroni/patroni.yml:/etc/patroni.yml
      - ./docker/patroni/entrypoint.sh:/usr/local/bin/entrypoint.sh
    networks:
      - internal
    depends_on:
      - consul
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == manager
#          - node.role == worker
        max_replicas_per_node: 3
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  sentinel:
    image: ghcr.io/krasnopolskiy/redis-consul:latest
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    entrypoint: /usr/local/bin/entrypoint.sh
    environment:
      - CONSUL_SERVICE_NAME=sentinel
      - CONSUL_SERVICE_PORT=26379
      - CONSUL_HOST=gateway:8500
    volumes:
      - ./docker/redis/sentinel.conf:/usr/local/etc/redis/sentinel.conf
      - ./docker/redis/entrypoint.sh:/usr/local/bin/entrypoint.sh
    networks:
      - internal
    depends_on:
      - consul
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.role == manager
        max_replicas_per_node: 3
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: ghcr.io/krasnopolskiy/redis-consul
    command: redis-server --requirepass mypassword --masterauth mypassword
    entrypoint: /usr/local/bin/entrypoint.sh
    environment:
      - CONSUL_SERVICE_NAME=redis
      - CONSUL_SERVICE_PORT=6379
      - CONSUL_HOST=gateway:8500
    volumes:
      - ./docker/redis/entrypoint.sh:/usr/local/bin/entrypoint.sh
    networks:
      - internal
    depends_on:
      - consul
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == manager
#          - node.role == worker
        max_replicas_per_node: 3
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "mypassword", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  gitlab:
    image: zengxs/gitlab:17.5.0-ce.0
    ports:
      - "8000:8000"
    networks:
      - internal
    volumes:
      - ./docker/gitlab/gitlab.rb:/etc/gitlab/gitlab.rb
    depends_on:
      - patroni
      - redis
      - gateway
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
#          - node.role == worker
        max_replicas_per_node: 3

networks:
  internal:
    driver: overlay
    attachable: true
